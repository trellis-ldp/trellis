plugins {
    id 'java-library'
    id 'biz.aQute.bnd.builder'
    id 'info.solidsoft.pitest'
}

description = 'Trellis AMQP'

configurations {
    qpid
}

ext {
    moduleName = 'org.trellisldp.amqp'
    testModules = ['smallrye.config', 'org.trellisldp.vocabulary', 'org.trellisldp.event.jackson', 'org.apache.commons.rdf.simple']
}

dependencies {
    api "com.rabbitmq:amqp-client:$rabbitMqVersion"
    api "jakarta.inject:jakarta.inject-api:$injectApiVersion"
    api project(':trellis-api')

    implementation "org.eclipse.microprofile.config:microprofile-config-api:$microprofileConfigVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "com.sleepycat:je:$sleepycatVersion"
    testImplementation "io.smallrye.config:smallrye-config:$smallryeConfigVersion"
    testImplementation "org.apache.commons:commons-rdf-simple:$commonsRdfVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation project(':trellis-event-jackson')
    testImplementation project(':trellis-vocabulary')

    qpid "org.apache.qpid:qpid-broker:$qpidVersion"

    if (!project.sourceCompatibility.isJava11Compatible()) {
        testImplementation("org.apache.qpid:qpid-broker:$qpidVersion")
    }
}

pitest {
    testPlugin = 'junit5'
    pitestVersion = pitestToolVersion
    threads = 4
    jvmArgs = ["-Dderby.stream.error.file=$buildDir/derby.log"]
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group.startsWith('com.fasterxml.jackson.')) {
            details.useVersion jacksonVersion
            details.because 'Jackson modules should use a consistent version'
        }
        if (details.requested.group == 'com.sleepycat') {
            details.useVersion sleepycatVersion
        }
    }
}

test {
    def port = Integer.toString(new ServerSocket(0).getLocalPort())
    systemProperty 'qpid.amqp.port', port
    systemProperty 'derby.stream.error.file', "$buildDir/derby.log"
    systemProperty 'trellis.amqp.uri', "amqp://guest:guest@localhost:${port}/testing"
}

if (project.sourceCompatibility.isJava11Compatible()) {
    compileTestJava {
        inputs.property("moduleName", moduleName)
        doFirst {
            options.compilerArgs += [
                '--add-reads', "$moduleName=ALL-UNNAMED",
            ]
            classpath = files(configurations.qpid)
        }
    }

    test {
        inputs.property("moduleName", moduleName)
        doFirst {
            jvmArgs += [
                '--add-reads', "$moduleName=ALL-UNNAMED",
            ]
            classpath = files(configurations.qpid)
        }
    }
}
