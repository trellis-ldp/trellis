// OpenLiberty requires using the legacy plugin management mechanism
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.1.2'
    }
}

plugins {
    id "war"
}

apply plugin: 'liberty'

ext {
    appName = "trellis"
    testServerHttpPort = 9080
    testServerHttpsPort = 9443
    warContext = appName
}

dependencies {
    implementation platform("org.eclipse.microprofile:microprofile:$microprofileVersion")

    implementation "jakarta.enterprise:jakarta.enterprise.cdi-api:${cdiApiVersion}"
    implementation "jakarta.annotation:jakarta.annotation-api:$annotationApiVersion"
    implementation "jakarta.ws.rs:jakarta.ws.rs-api:$jaxrsApiVersion"

    implementation project(':trellis-api')
    implementation project(':trellis-app')
    implementation project(':trellis-audit')
    implementation project(':trellis-cdi')
    implementation project(':trellis-constraint')
    implementation project(':trellis-file')
    implementation project(':trellis-http')
    implementation project(':trellis-jena')
    implementation project(':trellis-namespace')
    implementation project(':trellis-notification-jsonb')
    implementation project(':trellis-rdfa')
    implementation project(':trellis-triplestore')
    implementation project(':trellis-vocabulary')
    implementation project(':trellis-webac')

    implementation("com.github.jsonld-java:jsonld-java:$jsonldVersion") {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient-osgi'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore-osgi'
    }
    implementation "commons-codec:commons-codec:$commonsCodecVersion"
    implementation "org.apache.jena:jena-arq:$jenaVersion"
    implementation "org.apache.jena:jena-rdfconnection:$jenaVersion"
    implementation "org.apache.jena:jena-tdb2:$jenaVersion"
    implementation "org.eclipse.microprofile.config:microprofile-config-api"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.apache.commons:commons-rdf-api:$commonsRdfVersion"
    implementation "org.apache.jena:jena-commonsrdf:$jenaVersion"

    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    runtimeOnly "jakarta.activation:jakarta.activation-api:$activationApiVersion"
    runtimeOnly "jakarta.validation:jakarta.validation-api:$validationApiVersion"
    runtimeOnly "jakarta.xml.bind:jakarta.xml.bind-api:$jaxbApiVersion"

    testImplementation project(':trellis-test')

    testImplementation("io.smallrye.config:smallrye-config:$smallryeConfigVersion")
    testImplementation("org.apache.cxf:cxf-rt-rs-client:$cxfVersion")
    testImplementation("org.awaitility:awaitility:$awaitilityVersion") {
        exclude group: "org.hamcrest", module: 'hamcrest-core'
        exclude group: 'org.hamcrest', module: 'hamcrest-library'
    }
    testImplementation("org.hamcrest:hamcrest:$hamcrestVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")

    libertyRuntime group:'io.openliberty', name:'openliberty-runtime', version:'[19.0.0.12,)'
}

liberty {
    server {
        name = "${appName}"
        serverXmlFile = file("src/main/liberty/config/server.xml")
        bootstrapProperties = ['default.http.port': testServerHttpPort,
                               'default.https.port': testServerHttpsPort,
                               'trellis.triplestore.rdf-location': 'data/resources',
                               'trellis.file.memento-path': 'data/mementos',
                               'trellis.file.binary-path': 'data/binary',
                               'app.context.root': warContext]
        packageLiberty {
            include = "usr"
        }
    }
}

war {
    archiveFileName.set(archiveBaseName.flatMap { base -> archiveExtension.map { ext -> base + "." + ext} })
}

test {
    systemProperties = [
        'liberty.test.port': testServerHttpPort,
        'war.name': warContext
    ]
}

test.dependsOn 'libertyStart'
test.finalizedBy 'libertyStop'
libertyPackage.dependsOn 'libertyStop'

sonarqube {
    skipProject = true
}

