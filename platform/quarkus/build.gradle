plugins {
    id 'io.quarkus'
}

dependencies {
    implementation platform("io.quarkus:quarkus-bom:$quarkusVersion")
    implementation platform("io.netty:netty-bom:$nettyVersion")

    implementation 'io.quarkus:quarkus-jsonb'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-security'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.quarkus:quarkus-smallrye-metrics'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'

    implementation "com.github.jsonld-java:jsonld-java:$jsonldVersion"
    implementation "com.github.spullara.mustache.java:compiler:$mustacheVersion"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation "commons-codec:commons-codec:$commonsCodecVersion"
    implementation "org.apache.jena:jena-arq:$jenaVersion"
    implementation "org.apache.jena:jena-rdfconnection:$jenaVersion"
    implementation "org.apache.jena:jena-tdb2:$jenaVersion"

    implementation project(":trellis-api")
    implementation project(":trellis-app")
    implementation project(":trellis-audit")
    implementation project(":trellis-auth-jwt")
    implementation project(":trellis-cache")
    implementation project(":trellis-cdi")
    implementation project(":trellis-constraint-rules")
    implementation project(":trellis-event-jsonb")
    implementation project(":trellis-file")
    implementation project(":trellis-http")
    implementation project(":trellis-io-jena")
    implementation project(":trellis-namespaces")
    implementation project(":trellis-rdfa")
    implementation project(":trellis-reactive")
    implementation project(":trellis-triplestore")
    implementation project(":trellis-vocabulary")
    implementation project(":trellis-webac")

    runtimeOnly "jakarta.activation:jakarta.activation-api:$activationApiVersion"
    runtimeOnly "jakarta.xml.bind:jakarta.xml.bind-api:$jaxbApiVersion"

    testImplementation project(":trellis-test")
    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "org.jboss.resteasy:resteasy-client"
}

test {
    systemProperty 'com.arjuna.ats.arjuna.objectstore.objectStoreDir', "$buildDir/data/ObjectStore"
    systemProperty 'trellis.file.binary-path', "$buildDir/data/binaries"
    systemProperty 'trellis.file.memento-path', "$buildDir/data/mementos"
    systemProperty 'trellis.triplestore.rdf-location', "$buildDir/data/rdf"
    systemProperty 'trellis.namespaces.mapping', 'dc11=http://purl.org/dc/elements/1.1/,,foo= , =bar,baz, = '
    systemProperty 'mp.jwt.verify.publickey.location', 'https://www.trellisldp.org/tests/jwks.json'
    systemProperty 'trellis.http.weak-etag', 'true'
}

sonarqube {
    skipProject = true
}

buildNative.enabled = false

java {
    // because this isn't built as a JPMS module
    if (project.hasProperty("jpms") && JavaVersion.current().isJava11Compatible()) {
        disableAutoTargetJvm()
    }
}

