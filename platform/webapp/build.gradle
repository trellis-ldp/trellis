apply plugin: 'war'

description = 'Trellis Triplestore Application'

dependencies {
    compile("com.google.guava:guava:$guavaVersion")
    compile("javax.ws.rs:javax.ws.rs-api:$jaxrsVersion")
    compile("org.apache.jena:jena-osgi:$jenaVersion")
    compile("org.apache.commons:commons-compress:$commonsCompressVersion")
    compile("org.apache.commons:commons-lang3:$commonsLangVersion")
    compile("org.apache.tamaya:tamaya-api:$tamayaVersion")
    compile("org.apache.tamaya:tamaya-core:$tamayaVersion")
    compile("org.glassfish.jersey.core:jersey-server:$jerseyVersion")
    compile("org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion")

    compile project(':trellis-agent')
    compile project(':trellis-api')
    compile project(':trellis-constraint-rules')
    compile project(':trellis-file')
    compile project(':trellis-http')
    compile project(':trellis-io-jena')
    compile project(':trellis-namespaces')
    compile project(':trellis-triplestore')
    compile project(':trellis-auth-basic')
    compile project(':trellis-auth-oauth')
    compile project(':trellis-webac')

    runtime("javax.xml.bind:jaxb-api:$jaxbVersion")
    runtime("javax.activation:javax.activation-api:$activationApiVersion")
    runtime("ch.qos.logback:logback-classic:$logbackVersion")

    testCompile("org.awaitility:awaitility:$awaitilityVersion")
    testCompile("org.apache.commons:commons-text:$commonsTextVersion")
    testCompile("org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion")
    testCompile("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:$jerseyVersion")
    testCompile("org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion")
    testCompile("org.glassfish.hk2.external:javax.inject:$javaxInjectVersion")
    testCompile("org.mockito:mockito-core:$mockitoVersion")
    testCompile project(':trellis-test')

    testRuntimeClasspath("javax.xml.bind:jaxb-api:$jaxbVersion")
    testRuntimeClasspath("javax.activation:javax.activation-api:$activationApiVersion")
    testRuntimeClasspath("ch.qos.logback:logback-classic:$logbackVersion")
}

test {
    systemProperty 'trellis.file.memento.basepath', "$buildDir/data/mementos"
    systemProperty 'trellis.file.binary.basepath', "$buildDir/data/binaries"
    systemProperty 'trellis.rdf.location', "$buildDir/data/rdf"
    systemProperty 'trellis.namespaces.path', "$buildDir/namespaces.json"
    systemProperty 'trellis.auth.basic.credentials', "$buildDir/resources/test/users.auth"
    systemProperty 'trellis.auth.oauth.sharedsecret', 'EEPPbd/7llN/chRwY2UgbdcyjFdaGjlzaupd3AIyjcu8hMnmMCViWoPUBb5FphGLxBlUlT/G5WMx0WcDq/iNKA=='
    systemProperty 'trellis.io.jsonld.profiles', 'http://www.w3.org/ns/anno.jsonld'
}
