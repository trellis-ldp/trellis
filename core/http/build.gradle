apply plugin: 'java-library'
apply plugin: 'osgi'

description = 'Trellis HTTP API'

ext {
    moduleName = 'org.trellisldp.http'
}

dependencies {
    api("io.dropwizard.metrics:metrics-annotation:$metricsVersion")
    api("javax.annotation:javax.annotation-api:$javaxAnnotationsVersion")
    api("javax.ws.rs:javax.ws.rs-api:$jaxrsVersion")
    api("org.apache.commons:commons-rdf-api:$commonsRdfVersion")
    api("org.glassfish.hk2.external:javax.inject:$javaxInjectVersion")
    api project(':trellis-api')

    implementation("commons-codec:commons-codec:$commonsCodecVersion")
    implementation("commons-io:commons-io:$commonsIoVersion")
    implementation("org.apache.tamaya:tamaya-api:$tamayaVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation project(':trellis-vocabulary')

    testImplementation("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    testImplementation("com.google.guava:guava:$guavaVersion")
    testImplementation("org.apache.commons:commons-rdf-simple:$commonsRdfVersion")
    testImplementation("org.apache.tamaya:tamaya-core:$tamayaVersion")
    testImplementation("org.glassfish.jersey.core:jersey-server:$jerseyVersion")
    testImplementation("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jerseyVersion")
    testImplementation("org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion")
    testImplementation("org.glassfish.jersey.connectors:jersey-apache-connector:$jerseyVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation project(':trellis-agent')
    testImplementation project(':trellis-audit')
    testImplementation project(':trellis-constraint-rules')
    testImplementation project(':trellis-event-serialization')
    testImplementation project(':trellis-io-jena')

    testRuntimeClasspath("javax.xml.bind:jaxb-api:$jaxbVersion")
    testRuntimeClasspath("javax.activation:javax.activation-api:$activationApiVersion")
    testRuntimeClasspath("ch.qos.logback:logback-classic:$logbackVersion")
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.trellisldp.api.AuditService)";
                resolution:=optional; cardinality:=optional,
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.trellisldp.api.ConstraintService)";
                resolution:=optional; cardinality:=multiple
            '''
    }
}

