plugins {
    id 'java-library'
    id 'biz.aQute.bnd.builder'
}

description = 'Trellis JDBC component'

configurations {
    testcontainers
}

ext {
    moduleName = 'org.trellisldp.jdbc'
    testModules = ['smallrye.config', 'org.trellisldp.test', 'liquibase.core', 'java.naming']
}

dependencies {
    api platform("org.eclipse.microprofile:microprofile:$microprofileVersion")

    api "jakarta.annotation:jakarta.annotation-api:$annotationApiVersion"
    api "jakarta.enterprise:jakarta.enterprise.cdi-api:$cdiApiVersion"
    api "jakarta.inject:jakarta.inject-api:$injectApiVersion"
    api "org.apache.commons:commons-lang3:$commonsLangVersion"
    api "org.apache.commons:commons-rdf-api:$commonsRdfVersion"
    api "org.apache.jena:jena-arq:$jenaVersion"
    api "org.apache.jena:jena-commonsrdf:$jenaVersion"
    api "org.eclipse.microprofile.health:microprofile-health-api"
    api "org.jdbi:jdbi3-core:$jdbiVersion"
    api project(":trellis-api")

    implementation "org.eclipse.microprofile.config:microprofile-config-api"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation project(":trellis-vocabulary")

    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "com.google.guava:guava:$guavaVersion"
    testImplementation "io.smallrye.config:smallrye-config:$smallryeConfigVersion"
    testImplementation("io.smallrye:smallrye-health:$smallryeHealthVersion") {
        exclude group: 'io.smallrye', module: 'smallrye-health-extension-api'
    }
    testImplementation "jakarta.xml.bind:jakarta.xml.bind-api:$jaxbApiVersion"
    testImplementation "org.apache.commons:commons-text:$commonsTextVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.yaml:snakeyaml:$snakeyamlVersion"
    testImplementation "org.liquibase:liquibase-core:$liquibaseVersion"
    testImplementation "org.postgresql:postgresql:$postgresVersion"

    testImplementation project(":trellis-test")

    testcontainers "org.testcontainers:postgresql:$testcontainersVersion"
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs += [
            '--add-reads', "$moduleName=ALL-UNNAMED",
        ]
        classpath = files(configurations.testcontainers)
    }
}

test {
    inputs.property("moduleName", moduleName)

    systemProperty "trellis.jdbc.test.postgres-container-version", postgresContainerVersion

    doFirst {
        jvmArgs += [
            '--add-reads', "$moduleName=ALL-UNNAMED",
        ]
        classpath = files(configurations.testcontainers)
    }
}
