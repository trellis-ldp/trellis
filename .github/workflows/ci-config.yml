name: GitHub CI

on:
  push:
    branches:
      - main
      - trellis-[0-9]+.[0-9]+.x
  pull_request:
    branches:
      - main


jobs:
  validation:
    name: Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: gradle/wrapper-validation-action@v1.0.3

  build:
    name: Java ${{ matrix.java }} environment
    needs: [validation]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11, 14]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trellis
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1.3.0
      with:
        java-version: ${{ matrix.java }}

    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build javadoc
      env:
        QUARKUS_DATASOURCE_USERNAME: postgres
        QUARKUS_DATASOURCE_PASSWORD: postgres
        QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://localhost/trellis

  coveralls:
    name: Coveralls verification
    needs: [validation]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trellis
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build javadoc jacocoRootReport coveralls -x :trellis-quarkus:test -x :trellis-openliberty:test -x :trellis-dropwizard-app:test
      env:
        QUARKUS_DATASOURCE_USERNAME: postgres
        QUARKUS_DATASOURCE_PASSWORD: postgres
        QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://localhost/trellis
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  sonar:
    name: Sonar verification
    needs: [validation]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trellis
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build javadoc jacocoRootReport sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=trellis-ldp -x :trellis-quarkus:test -x :trellis-openliberty:test -x :trellis-dropwizard-app:test
      env:
        QUARKUS_DATASOURCE_USERNAME: postgres
        QUARKUS_DATASOURCE_PASSWORD: postgres
        QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://localhost/trellis
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  windows:
    name: Windows (triplestore) environment
    needs: [validation]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11
    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      shell: bash
      run: ./gradlew.bat check -Ptriplestore

  quarkusTriplestore:
    name: Quarkus (triplestore) environment
    needs: [validation]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Test the Quarkus app with a Triplestore
      run: ./gradlew check -p platform/quarkus build -Ptriplestore

  quarkusPostgres:
    name: Quarkus (postgres) environment
    needs: [validation]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trellis
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Test the Quarkus app with PostgreSQL
      run: ./gradlew check -p platform/quarkus build
      env:
        QUARKUS_DATASOURCE_USERNAME: postgres
        QUARKUS_DATASOURCE_PASSWORD: postgres
        QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://localhost/trellis

  dropwizardTriplestore:
    name: Dropwizard (triplestore) environment
    needs: [validation]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Test the Dropwizard app with a triplestore
      run: ./gradlew check -p platform/dropwizard build
      env:
          TRELLIS_TEST_DATABASE: false

  dropwizardPostgres:
    name: Dropwizard (postgres) environment
    needs: [validation]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: trellis
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11

    - name: Test the Dropwizard app with PostgreSQL
      run: ./gradlew check -p platform/dropwizard build
      env:
          TRELLIS_TEST_JDBC_DRIVER_CLASS: org.postgresql.Driver
          TRELLIS_TEST_JDBC_USER: postgres
          TRELLIS_TEST_JDBC_PASSWORD: postgres
          TRELLIS_TEST_JDBC_URL: jdbc:postgresql://localhost/trellis
          TRELLIS_TEST_TRIPLESTORE: false

  osgi:
    name: OSGi provisioning
    needs: [validation]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.1.0
    - name: Set up JDK 11
      uses: actions/setup-java@v1.3.0
      with:
        java-version: 11
    - name: Cache
      uses: actions/cache@v1.1.2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew -p platform/osgi check -Posgi

